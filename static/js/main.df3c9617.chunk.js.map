{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","interval","updateTime","setState","this","window","setInterval","prevProps","name","props","console","debug","info","toUTCString","slice","clearInterval","className","React","Component","App","hasClock","clockName","handleLeftClick","handleRightClick","event","preventDefault","getRandomName","value","now","toString","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"iPAWaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,cALF,IAyBEC,WAAa,WACX,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,QA1B9B,uDAOE,WACEI,KAAKH,SAAWI,OAAOC,YAAYF,KAAKF,WAAY,OARxD,gCAWE,SAAmBK,GACbA,EAAUC,OAASJ,KAAKK,MAAMD,KAEhCE,QAAQC,MAAR,uBAA8BJ,EAAUC,KAAxC,eAAmDJ,KAAKK,MAAMD,OAG9DE,QAAQE,KAAKR,KAAKN,MAAMC,KAAKc,cAAcC,OAAO,IAAK,MAjB7D,kCAqBE,WACEC,cAAcX,KAAKH,YAtBvB,oBA6BE,WACE,IAAQF,EAASK,KAAKN,MAAdC,KAER,OACE,sBAAKiB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKK,MAAMD,OAGb,YAED,sBAAMQ,UAAU,cAAhB,SACGjB,EAAKc,cAAcC,OAAO,IAAK,YAzC1C,GAA2BG,IAAMC,WCPpBC,EAAb,4MACErB,MAAkD,CAChDsB,UAAU,EACVC,UAAW,WAHf,EAMEpB,cANF,IAoBEqB,gBAAkB,WACX,EAAKxB,MAAMsB,UACd,EAAKjB,SAAS,CAAEiB,UAAU,KAtBhC,EA0BEG,iBAAmB,SAACC,GAClBA,EAAMC,iBACF,EAAK3B,MAAMsB,UACb,EAAKjB,SAAS,CAAEiB,UAAU,KA7BhC,EAiCEM,cAAgB,WACd,IAAMC,EAAQ3B,KAAK4B,MAAMC,WAAWf,OAAO,GAE3C,EAAKX,SAAS,CAAEkB,UAAU,SAAD,OAAWM,MApCxC,uDAQE,WACEG,SAASC,iBAAiB,QAAS3B,KAAKkB,iBACxCQ,SAASC,iBAAiB,cAAe3B,KAAKmB,kBAC9CnB,KAAKH,SAAWI,OAAOC,YAAYF,KAAKsB,cAAe,QAX3D,kCAcE,WACEI,SAASE,oBAAoB,QAAS5B,KAAKkB,iBAC3CQ,SAASE,oBAAoB,cAAe5B,KAAKmB,kBACjDR,cAAcX,KAAKH,YAjBvB,oBAuCE,WACE,IAAQoB,EAAcjB,KAAKN,MAAnBuB,UAER,OACE,sBAAKL,UAAU,MAAf,UACE,oBAAIA,UAAU,cAAd,yBAEEZ,KAAKN,MAAMsB,UAAY,cAAC,EAAD,CAAOZ,KAAMa,WA9C9C,GAAyBJ,IAAMC,WCD/Be,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.df3c9617.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string;\n};\n\ntype State = {\n  time: Date\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    time: new Date(),\n  };\n\n  interval: number | undefined;\n\n  componentDidMount(): void {\n    this.interval = window.setInterval(this.updateTime, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<Props>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    } else {\n      // eslint-disable-next-line no-console\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }\n  }\n\n  componentWillUnmount(): void {\n    clearInterval(this.interval);\n  }\n\n  updateTime = (): void => {\n    this.setState({ time: new Date() });\n  };\n\n  render(): React.ReactNode {\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nexport class App extends React.Component {\n  state: { hasClock: boolean, clockName: string } = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  interval: number | undefined;\n\n  componentDidMount(): void {\n    document.addEventListener('click', this.handleLeftClick);\n    document.addEventListener('contextmenu', this.handleRightClick);\n    this.interval = window.setInterval(this.getRandomName, 3300);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('click', this.handleLeftClick);\n    document.removeEventListener('contextmenu', this.handleRightClick);\n    clearInterval(this.interval);\n  }\n\n  handleLeftClick = (): void => {\n    if (!this.state.hasClock) {\n      this.setState({ hasClock: true });\n    }\n  };\n\n  handleRightClick = (event: MouseEvent): void => {\n    event.preventDefault();\n    if (this.state.hasClock) {\n      this.setState({ hasClock: false });\n    }\n  };\n\n  getRandomName = (): void => {\n    const value = Date.now().toString().slice(-4);\n\n    this.setState({ clockName: `Clock-${value}` });\n  };\n\n  render() {\n    const { clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__header\">React clock</h1>\n        {\n          this.state.hasClock && <Clock name={clockName} />\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}